<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<!-- spring boot 父级依赖 ，必要-->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.4.0</version>
		<relativePath />
	</parent>
	<!-- 当前项目信息-->
	<groupId>com.www</groupId>
	<artifactId>my-boot</artifactId>
	<version>1.0.0</version>
	<name>my-boot</name>
	<description>Spring Boot学习Demo</description>

	<properties>
		<java.version>1.8</java.version>
		<maven-jar-plugin.version>3.1.1</maven-jar-plugin.version>
	</properties>
	<!-- 依赖配置 -->
	<dependencies>
		<!-- springboot框架web项目起步依赖 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!-- AOP依赖 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<!-- dubbo依赖 -->
		<dependency>
			<groupId>org.apache.dubbo</groupId>
			<artifactId>dubbo-spring-boot-starter</artifactId>
			<version>2.7.3</version>
		</dependency>
		<!-- 引入自定义的dubbo统一管理的服务接口包，便于管理接口 -->
		<dependency>
			<groupId>com.www</groupId>
			<artifactId>boot-dubbo-api</artifactId>
			<version>1.0.0</version>
		</dependency>
		<!-- zookeeper客户端依赖 -->
		<dependency>
			<groupId>org.apache.curator</groupId>
			<artifactId>curator-recipes</artifactId>
			<version>3.0.0</version>
		</dependency>
		<!-- zookeeper客户端依赖 -->
		<dependency>
			<groupId>org.apache.curator</groupId>
			<artifactId>curator-framework</artifactId>
			<version>3.0.0</version>
		</dependency>
		<!-- zookeeper依赖 -->
		<dependency>
			<groupId>org.apache.zookeeper</groupId>
			<artifactId>zookeeper</artifactId>
			<version>3.7.0</version>
			<!-- 排除这个log4j避免jar冲突 -->
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- swagger2 和UI依赖 -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-boot-starter</artifactId>
			<version>3.0.0</version>
		</dependency>
		<!-- security和shiro二选一 -->
		<!-- security权限认证 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<!-- shiro权限认证 -->
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-spring-boot-web-starter</artifactId>
			<version>1.7.1</version>
		</dependency>
		<!-- druid数据连接池 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid-spring-boot-starter</artifactId>
			<version>1.2.5</version>
		</dependency>
		<!-- springboot thymeleaf页面依赖 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<!-- springboot websocket页面依赖 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-websocket</artifactId>
		</dependency>
		<!-- springboot的redis依赖 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>
		<!-- mybatis插件依赖 -->
		<dependency>
			<groupId>com.baomidou</groupId>
			<artifactId>mybatis-plus-boot-starter</artifactId>
			<version>3.4.3</version>
		</dependency>
		<!-- oracle数据库依赖 -->
<!--		<dependency>-->
<!--			<groupId>com.oracle</groupId>-->
<!--			<artifactId>ojdbc6</artifactId>-->
<!--			<version>11.2.0</version>-->
<!--		</dependency>-->
		<!-- mysql数据库依赖 -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.25</version>
		</dependency>
		<!-- springboot框架测试起步依赖 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!--fastjson 依赖-->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.2.83</version>
		</dependency>
		<!--commons 依赖-->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.9</version>
		</dependency>
		<!--collections 依赖-->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>4.4</version>
		</dependency>
		<!-- log4j依赖-->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
	</dependencies>

	<!--配置环境的profile-->
	<profiles>
		<!--dev默认激活，使用idea Spring Boot 配置启动工程，需要dev的配置-->
		<profile>
			<id>dev</id>
			<properties>
				<profileActive>dev</profileActive>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<profileActive>prod</profileActive>
			</properties>
		</profile>
	</profiles>

	<build>
		<resources>
			<!-- 使用jsp必须手动指定最后的编译路径，路径是springboot规定好的位置META-INF/resources -->
			<!--			<resource>-->
			<!--				&lt;!&ndash; 源文件 &ndash;&gt;-->
			<!--				<directory>src/main/webapp</directory>-->
			<!--				&lt;!&ndash; 指定编译到META-INF/resources &ndash;&gt;-->
			<!--				<targetPath>META-INF/resources</targetPath>-->
			<!--				&lt;!&ndash; 指定源文件夹中的哪个资源要进行编译 &ndash;&gt;-->
			<!--				<includes>-->
			<!--					<include>*.*</include>-->
			<!--				</includes>-->
			<!--			</resource>-->
			<!-- *Mapper.xml文件跟*Mapper.java在src/main/java中同一路径时需要配置  -->
			<!--			<resource>-->
			<!--				&lt;!&ndash; 源文件 &ndash;&gt;-->
			<!--				<directory>src/main/java</directory>-->
			<!--				&lt;!&ndash; 指定源文件夹中的哪个资源要进行编译 &ndash;&gt;-->
			<!--				<filtering>true</filtering>-->
			<!--				<includes>-->
			<!--					<include>**/*.xml</include>-->
			<!--				</includes>-->
			<!--			</resource>-->
		</resources>
		<plugins>
			<!-- mybatis代码自动生成插件 -->
			<plugin>
				<groupId>org.mybatis.generator</groupId>
				<artifactId>mybatis-generator-maven-plugin</artifactId>
				<version>1.3.6</version>
				<configuration>
					<!-- 配置文件 -->
					<configurationFile>generatorMapper.xml</configurationFile>
					<verbose>true</verbose>
					<overwrite>true</overwrite>
				</configuration>
			</plugin>
			<!-- springboot项目打包编译插件 -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<mainClass>com.www.demo.MyBootApplication</mainClass>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
